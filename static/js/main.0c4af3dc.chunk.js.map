{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context/github/GithubState.js","components/layout/Spinner.js","components/repos/RepoItem.js","components/repos/Repos.js","context/github/githubContext.js","components/users/User.js","context/alert/alertContext.js","components/layout/Alert.js","components/users/Search.js","components/users/UserItem.js","components/users/Users.js","components/pages/Home.js","components/pages/About.js","context/github/githubReducer.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","githubClientId","githubClientSecret","Spinner","src","spinner","alt","style","width","margin","display","RepoItem","repo","href","html_url","name","Repos","repos","map","key","id","githubContext","createContext","User","match","useContext","GithubContext","getUser","loading","user","getUserRepos","useEffect","params","login","company","avatar_url","location","bio","blog","followers","following","public_repos","public_gists","hireable","alertContext","Alert","alert","AlertContext","type","msg","Search","setAlert","useState","text","setText","onSubmit","e","preventDefault","searchUsers","placeholder","value","onChange","target","users","length","onClick","clearUsers","UserItem","role","userStyle","gridTemplateColumns","gridGap","Users","Home","About","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","GithubReducer","dispatch","setLoading","Provider","a","async","axios","get","res","data","items","username","children","AlertState","AlertReducer","setTimeout","App","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,qC,mJCIrCC,EAAS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACE,yBAAKC,UAAU,qBACb,4BACE,uBAAGA,UAAWF,IADhB,IAC4BC,GAE5B,4BACE,4BACE,kBAAC,IAAD,CAAME,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,aAOVJ,EAAOK,aAAe,CACpBH,MAAO,gBACPD,KAAM,iBAQOD,ICpBXM,EACAC,EDmBWP,I,iBEpBAQ,EATC,kBACd,kBAAC,WAAD,KACE,yBACEC,IAAKC,IACLC,IAAI,aACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,aCOzCC,EAZG,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAChB,OACI,yBAAKd,UAAU,QACX,4BACI,uBAAGe,KAAMD,EAAKE,UAAWF,EAAKG,SCG/BC,EAND,SAAC,GACb,OAD2B,EAAZC,MACFC,KAAI,SAAAN,GAAI,OAAI,kBAAC,EAAD,CAAUA,KAAMA,EAAMO,IAAKP,EAAKQ,SCD5CC,EAFOC,0BCuGPC,EAnGF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACRH,EAAgBI,qBAAWC,GAEzBC,EAAgDN,EAAhDM,QAASC,EAAuCP,EAAvCO,QAASC,EAA8BR,EAA9BQ,KAAMZ,EAAwBI,EAAxBJ,MAAOa,EAAiBT,EAAjBS,aAEvCC,qBAAU,WACRJ,EAAQH,EAAMQ,OAAOC,OACrBH,EAAaN,EAAMQ,OAAOC,SAEzB,IATuB,IAYxBlB,EAaEc,EAbFd,KACAmB,EAYEL,EAZFK,QACAC,EAWEN,EAXFM,WACAC,EAUEP,EAVFO,SACAC,EASER,EATFQ,IACAC,EAQET,EARFS,KACAL,EAOEJ,EAPFI,MACAnB,EAMEe,EANFf,SACAyB,EAKEV,EALFU,UACAC,EAIEX,EAJFW,UACAC,EAGEZ,EAHFY,aACAC,EAEEb,EAFFa,aACAC,EACEd,EADFc,SAGF,OAAIf,EAAgB,kBAAC,EAAD,MAGlB,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM7B,GAAG,IAAID,UAAU,iBAAvB,kBADF,YAIY,IACT6C,EACC,uBAAG7C,UAAU,8BAEb,uBAAGA,UAAU,oCAEf,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEM,IAAK+B,EACLrC,UAAU,YACVQ,IAAI,GACJC,MAAO,CAAEC,MAAO,WAElB,4BAAKO,GACL,wCAAcqB,IAEhB,6BACGC,GACC,kBAAC,WAAD,KACE,mCACA,2BAAIA,IAGR,uBAAGxB,KAAMC,EAAUhB,UAAU,qBAA7B,wBAGA,4BACE,4BACGmC,GACC,kBAAC,WAAD,KACE,8CADF,IAC+BA,IAKnC,4BACGC,GACC,kBAAC,WAAD,KACE,6CADF,IAC8BA,IAKlC,4BACGI,GACC,kBAAC,WAAD,KACE,6CADF,IAC8BA,OAOxC,yBAAKxC,UAAU,oBACb,yBAAKA,UAAU,uBAAf,cAAiDyC,GACjD,yBAAKzC,UAAU,uBAAf,cAAiD0C,GACjD,yBAAK1C,UAAU,qBAAf,iBAAkD2C,GAClD,yBAAK3C,UAAU,oBAAf,iBAAiD4C,IAEnD,kBAAC,EAAD,CAAOzB,MAAOA,MChGL2B,EAFMtB,0BCgBNuB,EAdD,WACZ,IAEQC,EAFarB,qBAAWsB,GAExBD,MAER,OACY,OAAVA,GACE,yBAAKhD,UAAS,sBAAiBgD,EAAME,OACnC,uBAAGlD,UAAU,uBADf,IACwCgD,EAAMG,M,QCwCrCC,EAhDA,SAAC,GAAgB,EAAfC,SAAgB,IACzB9B,EAAeI,qBAAWC,GAC1BkB,EAAcnB,qBAAWsB,GAFD,EAGNK,mBAAS,IAHH,mBAGvBC,EAHuB,KAGjBC,EAHiB,KAgB9B,OACE,6BACE,0BAAMC,SAbO,SAAAC,GACfA,EAAEC,iBACW,KAATJ,EACFT,EAAaO,SAAS,mEAEtB9B,EAAcqC,YAAYL,GAC1BC,EAAQ,MAOkBxD,UAAU,QAClC,2BACAD,MAAM,SACJmD,KAAK,OACLjC,KAAK,OACL4C,YAAY,kBACZC,MAAOP,EACPQ,SAXS,SAAAL,GAAC,OAAIF,EAAQE,EAAEM,OAAOF,UAajC,2BACEZ,KAAK,SACLY,MAAM,SACN9D,UAAU,4BAIbuB,EAAc0C,MAAMC,OAAS,GAC5B,4BACElE,UAAU,0BACVmE,QAAS5C,EAAc6C,YAFzB,WCZOC,EAvBE,SAAC,GAA+C,IAAD,IAA5CtC,KAAQI,EAAoC,EAApCA,MAAOE,EAA6B,EAA7BA,WAA6B,EAAjBrB,SAC7C,OACE,yBAAKhB,UAAU,oBACb,yBACEM,IAAK+B,EACL7B,IAAI,GACJR,UAAU,YACVS,MAAO,CAAEC,MAAO,UAElB,4BAAKyB,GAEL,6BACE,kBAAC,IAAD,CAAMlC,GAAE,gBAAWkC,GAASnC,UAAU,qCAAoCsE,KAAK,UAA/E,WCMFC,EAAY,CAChB3D,QAAS,OACT4D,oBAAqB,iBACrBC,QAAS,QAGIC,EAtBD,WACZ,IAAMnD,EAAcI,qBAAWC,GACvBE,EAAiBP,EAAjBO,QAASmC,EAAQ1C,EAAR0C,MACjB,OAAInC,EACK,kBAAC,EAAD,MAGL,yBAAKrB,MAAO8D,GACTN,EAAM7C,KAAI,SAAAW,GAAI,OACb,kBAAC,EAAD,CAAUV,IAAKU,EAAKT,GAAIS,KAAMA,SCJzB4C,EAPF,kBACX,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCIWC,EATD,WACZ,OACE,kBAAC,WAAD,KACE,wDACA,qEACA,6C,yCCCS,WAACC,EAAOC,GACrB,OAAQA,EAAO5B,MACb,ICVwB,eDWtB,OAAO,eACF2B,EADL,CAEEZ,MAAOa,EAAOC,QACdjD,SAAS,IAEb,ICfoB,WDgBlB,OAAO,eACF+C,EADL,CAEE9C,KAAM+C,EAAOC,QACbjD,SAAS,IAEb,ICpBuB,cDqBrB,OAAO,eACF+C,EADL,CAEEZ,MAAO,GACPnC,SAAS,IAEb,ICzBqB,YD0BnB,OAAO,eACF+C,EADL,CAEE1D,MAAO2D,EAAOC,QACdjD,SAAS,IAGb,IC/BuB,cDgCrB,OAAO,eACF+C,EADL,CAEE/C,SAAS,IAEb,QACE,OAAO+C,IbtBX1E,EAAiB6E,4LAAYC,iBAC7B7E,EAAqB4E,4LAAYE,qBAGnC,IA4EeC,EA5EK,SAAAC,GAClB,IAD2B,EAQDC,qBAAWC,EAPhB,CACnBrB,MAAO,GACPlC,KAAM,GACNZ,MAAO,GACPW,SAAS,IALgB,mBAQpB+C,EARoB,KAQbU,EARa,KAwDrBC,EAAa,kBAAMD,EAAS,CAAErC,Kc3EX,iBd6EzB,OACE,kBAAC,EAAcuC,SAAf,CACE3B,MAAO,CACLG,MAAOY,EAAMZ,MACblC,KAAM8C,EAAM9C,KACZZ,MAAO0D,EAAM1D,MACbW,QAAS+C,EAAM/C,QACf8B,YAtDc,SAAML,GAAN,eAAAmC,EAAAC,OAAA,uDAClBH,IADkB,WAAAE,EAAA,MAGAE,IAAMC,IAAN,gDACyBtC,EADzB,sBAC2CpD,EAD3C,0BAC2EC,KAJ3E,OAGZ0F,EAHY,OAOlBP,EAAS,CACPrC,Kc1CsB,ed2CtB6B,QAASe,EAAIC,KAAKC,QATF,sCAuDd5B,WAba,kBAAMmB,EAAS,CAAErC,Kc1EX,iBdwFnBrB,QA1CU,SAAMoE,GAAN,eAAAP,EAAAC,OAAA,uDACdH,IADc,WAAAE,EAAA,MAGIE,IAAMC,IAAN,uCACgBI,EADhB,sBACsC9F,EADtC,0BACsEC,KAJ1E,OAGR0F,EAHQ,OAOdP,EAAS,CACPrC,KcvDkB,WdwDlB6B,QAASe,EAAIC,OATD,sCA2CV/D,aA7Be,SAAMiE,GAAN,eAAAP,EAAAC,OAAA,uDACnBH,IADmB,WAAAE,EAAA,MAGDE,IAAMC,IAAN,uCACgBI,EADhB,wDACwE9F,EADxE,0BACwGC,KAJvG,OAGb0F,EAHa,OAOnBP,EAAS,CACPrC,KcnEmB,YdoEnB6B,QAASe,EAAIC,OATI,wCAgChBX,EAAMc,We5FE,WAACrB,EAAOC,GACrB,OAAQA,EAAO5B,MACb,IDCqB,YCAnB,OAAO4B,EAAOC,QAChB,IDAwB,eCCtB,OAAO,KACT,QACE,OAAOF,ICuBEsB,EA3BI,SAAAf,GACjB,IAD0B,EAGAC,qBAAWe,EAFhB,MADK,mBAGnBvB,EAHmB,KAGZU,EAHY,KAe1B,OACE,kBAAC,EAAaE,SAAd,CACE3B,MAAO,CACLd,MAAO6B,EACPxB,SAbW,SAACF,EAAKD,GACrBqC,EAAS,CACPrC,KFRmB,YESnB6B,QAAS,CAAE5B,MAAKD,UAGlBmD,YAAW,kBAAMd,EAAS,CAAErC,KFXJ,mBEW2B,QAUhDkC,EAAMc,WCQEI,G,MAtBH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAQC,SAAS,WACf,yBAAKvG,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwG,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,SAASC,UAAW9B,IACtC,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,eAAeC,UAAWjF,YCrB5DkF,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0c4af3dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.75ae2ba2.gif\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <nav className=\"navbar bg-primary\">\r\n      <h1>\r\n        <i className={icon}></i> {title}\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Github Finder\",\r\n  icon: \"fab fa-github\"\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\nimport {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS\r\n} from '../types';\r\n\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n} else {\r\n  githubClientId = process.env.GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\nconst GithubState = props => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n  // Search Users\r\n  const searchUsers = async text => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items\r\n    });\r\n  };\r\n\r\n  // Get User\r\n  const getUser = async username => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  // Get Repos\r\n  const getUserRepos = async username => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  // Clear Users\r\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n\r\n  // Set Loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;","import React, { Fragment } from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt=\"Loading...\"\r\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n    />\r\n  </Fragment>\r\n);\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n const RepoItem = ({repo}) => {\r\n    return (\r\n        <div className='card'>\r\n            <h3>\r\n                <a href={repo.html_url}>{repo.name}</a>\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\nRepoItem.propTypes = {\r\n    repo: PropTypes.object.isRequired\r\n}\r\nexport default RepoItem\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport RepoItem from \"./RepoItem\";\r\n\r\nconst Repos = ({ repos }) => {\r\n  return repos.map(repo => <RepoItem repo={repo} key={repo.id} />);\r\n};\r\nRepos.propTypes = {\r\n  repos: PropTypes.array.isRequired\r\n};\r\nexport default Repos;\r\n","import {createContext} from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport Repos from '../repos/Repos';\r\nimport { Link } from 'react-router-dom';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n    hireable\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to='/' className='btn btn-light'>\r\n        Back To Search\r\n      </Link>\r\n      Hireable:{' '}\r\n      {hireable ? (\r\n        <i className='fas fa-check text-success' />\r\n      ) : (\r\n        <i className='fas fa-times-circle text-danger' />\r\n      )}\r\n      <div className='card grid-2'>\r\n        <div className='all-center'>\r\n          <img\r\n            src={avatar_url}\r\n            className='round-img'\r\n            alt=''\r\n            style={{ width: '150px' }}\r\n          />\r\n          <h1>{name}</h1>\r\n          <p>Location: {location}</p>\r\n        </div>\r\n        <div>\r\n          {bio && (\r\n            <Fragment>\r\n              <h3>Bio</h3>\r\n              <p>{bio}</p>\r\n            </Fragment>\r\n          )}\r\n          <a href={html_url} className='btn btn-dark my-1'>\r\n            Visit Github Profile\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              {login && (\r\n                <Fragment>\r\n                  <strong>Username: </strong> {login}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n\r\n            <li>\r\n              {company && (\r\n                <Fragment>\r\n                  <strong>Company: </strong> {company}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n\r\n            <li>\r\n              {blog && (\r\n                <Fragment>\r\n                  <strong>Website: </strong> {blog}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className='card text-center'>\r\n        <div className='badge badge-primary'>Followers: {followers}</div>\r\n        <div className='badge badge-success'>Following: {following}</div>\r\n        <div className='badge badge-light'>Public Repos: {public_repos}</div>\r\n        <div className='badge badge-dark'>Public Gists: {public_gists}</div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default User;","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;","  \r\nimport React, { useContext } from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = () => {\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { alert } = alertContext;\r\n\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className='fas fa-info-circle' /> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;","import React, { useState, useContext } from \"react\";\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search = ({setAlert }) => {\r\n  const githubContext= useContext(GithubContext);\r\n  const alertContext= useContext(AlertContext);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === \"\") {\r\n      alertContext.setAlert(\"Tämäpä kiusallista mutta tyhjää ei voi hakea!!!\");\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText(\"\");\r\n    }\r\n  };\r\n  const onChange = e => setText(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className=\"form\">\r\n        <input\r\n        title='Search'\r\n          type=\"text\"\r\n          name=\"text\"\r\n          placeholder=\"Search Users...\"\r\n          value={text}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Search\"\r\n          className=\"btn btn-dark btn-block\"\r\n        />\r\n      </form>\r\n      \r\n      {githubContext.users.length > 0 && (\r\n        <button\r\n          className='btn btn-light btn-block'\r\n          onClick={githubContext.clearUsers}\r\n        >\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <img\r\n        src={avatar_url}\r\n        alt=\"\"\r\n        className=\"round-img\"\r\n        style={{ width: \"60px\" }}\r\n      />\r\n      <h3>{login}</h3>\r\n\r\n      <div>\r\n        <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm btn-block my-1\"role='button'>\r\n          More\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserItem.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\nexport default UserItem;\r\n","import React, { useContext} from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\n\r\nconst Users = () => {\r\n  const githubContext=useContext(GithubContext);\r\n  const { loading, users}= githubContext;\r\n  if (loading) {\r\n    return <Spinner></Spinner>;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map(user => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst userStyle = {\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"repeat(3, 1fr)\",\r\n  gridGap: \"1rem\"\r\n};\r\n\r\nexport default Users;\r\n","import React, { Fragment } from 'react';\r\nimport Search from '../users/Search';\r\nimport Users from '../users/Users';\r\n\r\nconst Home = () => (\r\n  <Fragment>\r\n    <Search />\r\n    <Users />\r\n  </Fragment>\r\n);\r\n\r\nexport default Home;","import React, { Fragment } from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>Jottain täst äpist</h1>\r\n      <p>Äppi ettii Githubin käyttäjii</p>\r\n      <p>versio 1.0.0</p>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default About;\r\n","import {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        loading: false\r\n      };\r\n    case GET_REPOS: {\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false\r\n      };\r\n    }\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = null;\r\n\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  // Set Alert\r\n  const setAlert = (msg, type) => {\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { msg, type }\r\n    });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alert: state,\r\n        setAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport User from \"./components/users/User\";\nimport Alert from \"./components/layout/Alert\";\nimport Home from \"./components/pages/Home.js\";\nimport About from \"./components/pages/About\";\n\nimport GithubState from \"./context/github/GithubState\";\nimport AlertState from \"./context/alert/AlertState\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router basename=\"/finder\">\n          <div className=\"App\">\n            <Navbar />\n            <div className=\"container\">\n              <Alert />\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/user/:login\" component={User} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}